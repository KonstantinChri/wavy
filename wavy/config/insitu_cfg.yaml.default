--- # in-situ observations

### minima example ###
valhall: # object nID (nameID)
    name: # sensor
        SAABWaveRadar_1: 0
        SAABWaveRadar_2: 1
    download:
    wavy_input:
    wavy_output:
    # optional, if not defined the class default is used
    reader: get_frost
    collector:
    # optional, needs to be defined if not cf and in variable_info.yaml
    vardef:
    coords:
    # optional, info that can be used by class functions
    misc:
        ID: 76939
    # optional, to ease grouping
    tags:


### oil rigs ###
draugen: # object nID (nameID)
    name: # sensor
        MKIIIradar_1: 0 # python indexing
        MKIIIradar_2: 1
    download:
        ftp:
    # optional: where to read from
    #           can be defined directly when calling wavy
    wavy_input:
        src_tmplt:
        fl_tmplt:
        strsub:
        date_incr:
    # optional: where to write to
    #           can be defined directly when calling wavy
    wavy_output:
        trgt_tmplt:
        fl_tmplt:
        strsub:
        file_date_incr:
    # optional, if not defined the class default is used
    reader: get_frost
    collector: 
    # optional, needs to be defined if not cf and in variable_info.yaml
    vardef:
        Hs: Hs
    coords:
    # optional, info that can be used by class functions
    misc:
        ID: 76925
        operator: OKEA
        manufacturer:
            MKIIIradar_1: Miros
            MKIIIradar_2: Miros
        coords:
            MKIIIradar_1:
                lat: 64.35
                lon: 7.78
            MKIIIradar_2:
                lat: 64.35
                lon: 7.78
        obs_type:
        date_incr_unit:
        date_incr:
    # optional, to ease grouping
    tags: ['oilrig','arcmfc']

### E39 project ###
D_Breisundet_wave: # object nID (nameID)
    name: # sensor
        wavescan:
    download:
        ftp:
    # optional: where to read from
    #           can be defined directly when calling wavy
    wavy_input:
        src_tmplt: "https://thredds.met.no/thredds/dodsC/\
                    obs/buoy-svv-e39/%Y/%m/"
        fl_tmplt: "%Y%m_E39_nID.nc"
        strsub: ['nID']
        file_date_incr_unit: 'm'
        file_date_incr: 1
    # optional: where to write to
    #           can be defined directly when calling wavy
    wavy_output:
        trgt_tmplt:
        fl_tmplt:
        strsub:
        file_date_incr_unit: 'm'
        file_date_incr: 1
    # optional, if not defined the class default is used
    reader: get_nc_thredds
    collector:
    # optional, needs to be defined if not cf and in variable_info.yaml
    vardef: 
        Hs: Hm0
        Tm02: tm02
        Tp: tp
        Mdir: mdir
        Pdir: thtp
    misc:
        ID:
        manufacturer:
            wavescan: fugro
        coords:
            wavescan:
                lat:
                lon:
        operator: SVV
        obs_type:
        date_incr_unit:
        date_incr:
    # optional, to ease grouping
    tags: ['E39','wave','pytest']

### cmems insitu monthly ###
MO_Draugen_monthly: # object nID (nameID)
    name: # sensor
        NA:
    download:
        ftp:
    # optional: where to read from
    #           can be defined directly when calling wavy
    wavy_input:
        src_tmplt: "/home/patrikb/wavy/tests/data/insitu/"
        fl_tmplt: "AR_TS_MO_Draugen_%Y%m.nc"
        strsub: ['nID']
        file_date_incr_unit: 'm'
        file_date_incr: 1
    # optional: where to write to
    #           can be defined directly when calling wavy
    wavy_output:
        trgt_tmplt:
        fl_tmplt:
        strsub:
        file_date_incr_unit: 'm'
        file_date_incr: 1
    # optional, if not defined the class default is used
    reader: get_cmems
    collector: get_remote_files_cmems
    # optional, needs to be defined if not cf and in variable_info.yaml
    vardef:
        Hs: VAVH
        lats: LATITUDE
        lons: LONGITUDE
        time: TIME
    misc:
        ID:
        manufacturer:
            NA:
        coords:
            NA:
                lat:
                lon:
        operator:
        obs_type:
        date_incr_unit:
        date_incr:
        fixed_dim:
            DEPTH: 2
    # optional, to ease grouping
    tags:

### cmems insitu daily ###
MO_Draugen_daily: # object nID (nameID)
    name: # sensor
        Draugen:
    download:
        ftp:
            src_tmplt: "/Core/\
                        INSITU_GLO_PHYBGCWAV_DISCRETE_MYNRT_013_030/\
                        cmems_obs-ins_glo_phybgcwav_mynrt_na_irr/\
                        latest/%Y%m%d/"
            trgt_tmplt: /home/patrikb/tmp_insitu/NRT/name/%Y/%m
            path_date_incr_unit: 'd'
            path_date_incr: 1
            search_str: 'Draugen_%Y%m%d'
            strsub: ['name']
            server: "nrt.cmems-du.eu"
    # optional: where to read from
    #           can be defined directly when calling wavy
    wavy_input:
        src_tmplt: "/home/patrikb/wavy/tests/data/insitu/"
        fl_tmplt: "AR_TS_MO_name_%Y%m%d.nc"
        strsub: ['name']
        file_date_incr_unit: 'd'
        file_date_incr: 1
    # optional: where to write to
    #           can be defined directly when calling wavy
    wavy_output:
    # optional, if not defined the class default is used
    reader: get_cmems
    collector: get_remote_files_cmems
    # optional, needs to be defined if not cf and in variable_info.yaml
    vardef:
        Hs: VAVH
        lats: LATITUDE
        lons: LONGITUDE
        time: TIME
    misc:
        fixed_dim:
            DEPTH: 2
    # optional, to ease grouping
    tags:

